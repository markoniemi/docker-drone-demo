unless Vagrant.has_plugin?("vagrant-hostmanager")
	system("vagrant plugin install vagrant-hostmanager")
	raise("Plugin installed. Run command again.");
end

unless Vagrant.has_plugin?("vagrant-docker-compose")
	system("vagrant plugin install vagrant-docker-compose")
	raise("Plugin installed. Run command again.");
end

Vagrant.configure("2") do |config|
  # login with docker/tcuser
  config.vm.box = "AlbanMontaigu/boot2docker"
  config.hostmanager.enabled = true
  config.hostmanager.manage_host = true
  config.hostmanager.manage_guest = true
  config.hostmanager.ignore_private_ip = false
  config.hostmanager.include_offline = true
  config.vm.define 'drone-test' do |node|
    node.vm.network "forwarded_port", guest: 8000, host: 8000
    node.vm.network "forwarded_port", guest: 9000, host: 9000 
    node.vm.network "forwarded_port", guest: 3000, host: 3000
    node.vm.hostname = 'drone-test'
    node.vm.network :private_network, ip: '192.168.50.100'
    node.hostmanager.aliases = %w(drone-test.localdomain drone-test)
  end
#  config.vm.provision "shell", inline: ". /vagrant/install-docker-compose.sh"
#  config.hostmanager.ignore_private_ip = false
#  config.hostmanager.include_offline = true
#  config.vm.provision :docker
#  config.vm.provision :docker_compose, yml: "/vagrant/docker-compose.yml", rebuild: true, run: "always"
#  config.vm.network :private_network, ip: "192.168.50.42"
#  config.vm.network :private_network, type = "dhcp"
#  config.vm.provision :docker_compose, rebuild: true, run: "always", yml: "/vagrant/docker-compose.yml"
end
